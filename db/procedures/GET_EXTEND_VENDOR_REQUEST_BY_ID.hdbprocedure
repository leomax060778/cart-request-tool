PROCEDURE "CART_REQUEST_TOOL"."xscartrequesttool.db.procedures::GET_EXTEND_VENDOR_REQUEST_BY_ID" (	
	IN in_extend_vendor_request_id bigint,
	OUT out_result TABLE (extend_vendor_request_id bigint, 
							user_name nvarchar(255),
							first_name nvarchar(255),
							last_name nvarchar(255),
							created_user_id bigint,
							entity_id bigint, 
							commodity_id bigint,
							commodity_description nvarchar(255),
							vendor_legal_name nvarchar(511),
							vendor_informal_name nvarchar(511), 
							vendor_contact_name nvarchar(255), 
							vendor_contact_email nvarchar(255), 
							vendor_type_id integer,
							iso nvarchar(2), 
							status_id bigint, 
							previous_status_id bigint, 
							user_id_status bigint, 
							update_status_tz nvarchar(15), 
							service_supplier nvarchar(1000), 
							purchase_amount decimal(19,2), 
							expected_amount decimal(19,2),
							purchase_currency_id integer, 
							expected_currency_id integer,
							PURCHASE_CURRENCY_ABBREVIATION nvarchar(255), 
							EXPECTED_CURRENCY_ABBREVIATION nvarchar(255),  
							additional_information nvarchar(1000), 
							receiver_user_id bigint, 
							vendor_account nvarchar(255), 
							receiver_date_submitted_tz nvarchar(15), 
							receiver_date_completed_tz nvarchar(15), 
							receiver_yvc_request nvarchar(255), 
							receiver_modified_date_tz nvarchar(15), 
							vendor_id bigint,
							BUDGET_YEAR integer
						)
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "CART_REQUEST_TOOL"
	READS SQL DATA AS
BEGIN
	out_result = SELECT EVR.EXTEND_VENDOR_REQUEST_ID,
						US.USER_NAME,
						US.FIRST_NAME,
						US.LAST_NAME, 
						EVR.CREATED_USER_ID,
						EVR.ENTITY_ID, 
						EVR.COMMODITY_ID, 
						COMMODITY.description as COMMODITY_DESCRIPTION,
						V.LEGAL_NAME AS VENDOR_LEGAL_NAME,
						V.INFORMAL_NAME AS VENDOR_INFORMAL_NAME,
						V.CONTACT_NAME AS VENDOR_CONTACT_NAME, 
						V.CONTACT_EMAIL AS VENDOR_CONTACT_EMAIL, 
						EVR.VENDOR_TYPE_ID,
						VT.ISO,
						EVR.STATUS_ID, 
					    EVR.PREVIOUS_STATUS_ID, 
					    EVR.USER_ID_STATUS, 
					    TO_NVARCHAR(EVR.UPDATE_STATUS_TZ,'YYYY-MM-DD') AS UPDATE_STATUS_TZ, 
					    EVR.SERVICE_SUPPLIER, 
					    EVR.PURCHASE_AMOUNT, 
					    EVR.EXPECTED_AMOUNT,
						EVR.PURCHASE_CURRENCY_ID, 
						EVR.EXPECTED_CURRENCY_ID,
						CURRENCY_PURCHASE.ABBREVIATION as PURCHASE_CURRENCY_ABBREVIATION, 
						CURRENCY_EXPECTED.ABBREVIATION as EXPECTED_CURRENCY_ABBREVIATION, 
						EVR.ADDITIONAL_INFORMATION, 
						EVR.RECEIVER_USER_ID, 
						V.ACCOUNT AS VENDOR_ACCOUNT, 
						TO_NVARCHAR(EVR.CREATED_DATE_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_SUBMITTED_TZ, 
						TO_NVARCHAR(EVR.RECEIVER_DATE_COMPLETED_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_COMPLETED_TZ, 
						EVR.RECEIVER_YVC_REQUEST, 
						TO_NVARCHAR(EVR.RECEIVER_MODIFIED_DATE_TZ,'YYYY-MM-DD') AS RECEIVER_MODIFIED_DATE_TZ, 
						EVR.VENDOR_ID,
						BUDGET_YEAR.BUDGET_YEAR
	FROM "EXTEND_VENDOR_REQUEST" EVR
	INNER JOIN "VENDOR" V ON V.VENDOR_ID = EVR.VENDOR_ID AND V.ENABLED = 1 AND V.DELETED = 0
	INNER JOIN "VENDOR_TYPE" VT ON EVR.VENDOR_TYPE_ID = VT.VENDOR_TYPE_ID
	INNER JOIN "COMMODITY" COMMODITY ON EVR.COMMODITY_ID = COMMODITY.COMMODITY_ID
	INNER JOIN "CURRENCY" CURRENCY_PURCHASE ON EVR.PURCHASE_CURRENCY_ID = CURRENCY_PURCHASE.CURRENCY_ID
	LEFT JOIN "CURRENCY" CURRENCY_EXPECTED ON EVR.EXPECTED_CURRENCY_ID = CURRENCY_EXPECTED.CURRENCY_ID
	INNER JOIN "USER" US ON US.user_id = EVR.user_id AND US.ENABLED = 1 AND US.DELETED = 0
	INNER JOIN "BUDGET_YEAR" BUDGET_YEAR ON BUDGET_YEAR.BUDGET_YEAR = CURRENCY_PURCHASE.CURRENCY_YEAR
		WHERE EVR.EXTEND_VENDOR_REQUEST_ID = in_extend_vendor_request_id
		AND EVR.deleted = 0
		AND EVR.enabled = 1;
END;