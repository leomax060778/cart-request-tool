PROCEDURE "CART_REQUEST_TOOL"."xscartrequesttool.db.procedures::GET_ALL_VENDOR_REQUEST_INQUIRY" (
	OUT out_result TABLE (VENDOR_REQUEST_INQUIRY_ID nvarchar(255),
							V_ID bigint,
							CREATED_DATE_TZ nvarchar(15),
							VENDOR_NAME NVARCHAR (255),
							RECEIVER_DATE_SUBMITTED_TZ nvarchar(15),
							RECEIVER_YVC_REQUEST NVARCHAR (255),
							RECEIVER_DATE_COMPLETED_TZ nvarchar(15),
							RECEIVER_VENDOR_ACCOUNT NVARCHAR (255),
							STATUS_NAME NVARCHAR(255),
							VENDOR_TYPE_ID BIGINT,
							order_date timestamp
						 )
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "CART_REQUEST_TOOL"
	READS SQL DATA AS
BEGIN
	out_result = SELECT VT.ISO || TO_NVARCHAR(VI.VENDOR_INQUIRY_ID) AS VENDOR_REQUEST_INQUIRY_ID, VI.VENDOR_INQUIRY_ID AS V_ID, TO_NVARCHAR(VI.CREATED_DATE_TZ,'YYYY-MM-DD') AS CREATED_DATE_TZ, VAI.VENDOR_NAME, TO_NVARCHAR(VI.CREATED_DATE_TZ, 'YYYY-MM-DD') AS RECEIVER_DATE_SUBMITTED_TZ, '' AS RECEIVER_YVC_REQUEST, '' AS RECEIVER_DATE_COMPLETED_TZ, V.ACCOUNT AS RECEIVER_VENDOR_ACCOUNT, ST.NAME AS STATUS_NAME, VI.VENDOR_TYPE_ID, VI.CREATED_DATE_TZ AS ORDER_DATE
             			FROM "VENDOR_INQUIRY" VI 
             			INNER JOIN "VENDOR" V ON VI.VENDOR_ID = V.VENDOR_ID AND V.ENABLED = 1 AND V.DELETED = 0
             			LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI 
             				ON (VI.VENDOR_ID = VAI.VENDOR_ID
     							AND((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= VI.CREATED_DATE_TZ 
       									and VAI.MODIFIED_DATE_TZ >= VI.CREATED_DATE_TZ) 
       							OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= VI.CREATED_DATE_TZ))
     							)
             			INNER JOIN "VENDOR_INQUIRY_STATUS" ST ON ST.STATUS_ID = VI.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = VI.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			WHERE VI.ENABLED = 1 AND VI.DELETED = 0
             	UNION
             	 (SELECT VT.ISO || TO_NVARCHAR(VR.VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID, VR.VENDOR_REQUEST_ID AS V_ID, TO_NVARCHAR(VR.CREATED_DATE_TZ,'YYYY-MM-DD') AS CREATED_DATE_TZ, VAI.VENDOR_NAME, TO_NVARCHAR(VR.CREATED_DATE_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_SUBMITTED_TZ, VR.RECEIVER_YVC_REQUEST, TO_NVARCHAR(VR.RECEIVER_DATE_COMPLETED_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_COMPLETED_TZ, V.ACCOUNT AS RECEIVER_VENDOR_ACCOUNT, ST.NAME AS STATUS_NAME, VR.VENDOR_TYPE_ID, VR.CREATED_DATE_TZ AS ORDER_DATE
             			FROM "VENDOR_REQUEST" VR 
             			INNER JOIN "VENDOR" V ON VR.VENDOR_ID = V.VENDOR_ID AND V.ENABLED = 1 AND V.DELETED = 0
             			LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI
	             			ON (VR.VENDOR_ID = VAI.VENDOR_ID
	     							AND((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= VR.RECEIVER_DATE_COMPLETED_TZ 
	       									and VAI.MODIFIED_DATE_TZ >= VR.RECEIVER_DATE_COMPLETED_TZ) 
	       							OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= VR.RECEIVER_DATE_COMPLETED_TZ))
	     							)
             			INNER JOIN "VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = VR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = VR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			WHERE VR.ENABLED = 1 AND VR.DELETED = 0)
             	UNION
             	 (SELECT VT.ISO || TO_NVARCHAR(CVR.CHANGE_VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID, CVR.CHANGE_VENDOR_REQUEST_ID AS V_ID, TO_NVARCHAR(CVR.CREATED_DATE_TZ,'YYYY-MM-DD') AS CREATED_DATE_TZ, VAI.VENDOR_NAME, TO_NVARCHAR(CVR.CREATED_DATE_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_SUBMITTED_TZ, CVR.RECEIVER_YVC_REQUEST, TO_NVARCHAR(CVR.RECEIVER_DATE_COMPLETED_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_COMPLETED_TZ, V.ACCOUNT AS RECEIVER_VENDOR_ACCOUNT, ST.NAME AS STATUS_NAME, CVR.VENDOR_TYPE_ID, CVR.CREATED_DATE_TZ AS ORDER_DATE
             			FROM "CHANGE_VENDOR_REQUEST" CVR 
             			INNER JOIN "VENDOR" V ON CVR.VENDOR_ID = V.VENDOR_ID AND V.ENABLED = 1 AND V.DELETED = 0
             			LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI
	             			ON (CVR.VENDOR_ID = VAI.VENDOR_ID
	     							AND((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= CVR.CREATED_DATE_TZ 
	       									and VAI.MODIFIED_DATE_TZ >= CVR.CREATED_DATE_TZ) 
	       							OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= CVR.CREATED_DATE_TZ))
	     							)
             			INNER JOIN "CHANGE_VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = CVR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = CVR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			WHERE CVR.ENABLED = 1 AND CVR.DELETED = 0)
             	UNION
             	 (SELECT VT.ISO || TO_NVARCHAR(EVR.EXTEND_VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID, EVR.EXTEND_VENDOR_REQUEST_ID AS V_ID, TO_NVARCHAR(EVR.CREATED_DATE_TZ,'YYYY-MM-DD') AS CREATED_DATE_TZ, VAI.VENDOR_NAME, TO_NVARCHAR(EVR.CREATED_DATE_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_SUBMITTED_TZ, EVR.RECEIVER_YVC_REQUEST, TO_NVARCHAR(EVR.RECEIVER_DATE_COMPLETED_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_COMPLETED_TZ, V.ACCOUNT AS RECEIVER_VENDOR_ACCOUNT, ST.NAME AS STATUS_NAME, EVR.VENDOR_TYPE_ID, EVR.CREATED_DATE_TZ AS ORDER_DATE
             			FROM "EXTEND_VENDOR_REQUEST" EVR 
             			INNER JOIN "VENDOR" V ON EVR.VENDOR_ID = V.VENDOR_ID AND V.ENABLED = 1 AND V.DELETED = 0
             			LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI
             					ON (EVR.VENDOR_ID = VAI.VENDOR_ID
	     							AND((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= EVR.CREATED_DATE_TZ 
	       									and VAI.MODIFIED_DATE_TZ >= EVR.CREATED_DATE_TZ) 
	       							OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= EVR.CREATED_DATE_TZ))
	     							)
             			INNER JOIN "EXTEND_VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = EVR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = EVR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			WHERE EVR.ENABLED = 1 AND EVR.DELETED = 0)
             			ORDER BY order_date DESC;
END;