PROCEDURE "CART_REQUEST_TOOL"."xscartrequesttool.db.procedures::GET_VENDOR_REQUEST_INQUIRY_BY_STATUS_ADMINISTRABLE" (
	IN in_administrable bigint,
  	OUT out_result TABLE (VENDOR_REQUEST_INQUIRY_ID nvarchar(255),
							V_ID bigint,
							VENDOR_NAME NVARCHAR (255),
							STATUS_NAME NVARCHAR(255),
							REQUESTER nvarchar(255), 
							VENDOR_TYPE_ID BIGINT,
							order_date timestamp
                       )
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
DEFAULT SCHEMA "CART_REQUEST_TOOL"
READS SQL DATA AS
BEGIN
out_result = SELECT VT.ISO || TO_NVARCHAR(VI.VENDOR_INQUIRY_ID) AS VENDOR_REQUEST_INQUIRY_ID, VI.VENDOR_INQUIRY_ID AS V_ID, VAI.VENDOR_NAME, ST.NAME AS STATUS_NAME, (US.user_name || ' / ' || US.first_name || ' ' || US.last_name) AS REQUESTER, VI.VENDOR_TYPE_ID, VI.CREATED_DATE_TZ AS ORDER_DATE
             			FROM "VENDOR_INQUIRY" VI
             			LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI 
             				ON (VI.VENDOR_ID = VAI.VENDOR_ID
     							AND((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= VI.CREATED_DATE_TZ 
       									and VAI.MODIFIED_DATE_TZ >= VI.CREATED_DATE_TZ) 
       							OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= VI.CREATED_DATE_TZ))
     							)
             			INNER JOIN "VENDOR_INQUIRY_STATUS" ST ON ST.STATUS_ID = VI.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = VI.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			INNER JOIN "USER" US ON US.USER_ID = VI.USER_ID AND US.ENABLED = 1 AND US.DELETED = 0
             			WHERE VI.STATUS_ID = ST.STATUS_ID AND ST.ADMINISTRABLE = in_administrable AND VI.ENABLED = 1 AND VI.DELETED = 0
             	UNION
             	 (SELECT VT.ISO || TO_NVARCHAR(VR.VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID, VR.VENDOR_REQUEST_ID AS V_ID, VAI.VENDOR_NAME, ST.NAME AS STATUS_NAME, (US.user_name || ' / ' || US.first_name || ' ' || US.last_name) AS REQUESTER, VR.VENDOR_TYPE_ID, VR.CREATED_DATE_TZ AS ORDER_DATE
             			FROM "VENDOR_REQUEST" VR
             			LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI
	             			ON (VR.VENDOR_ID = VAI.VENDOR_ID
	     							AND((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= VR.CREATED_DATE_TZ 
	       									and VAI.MODIFIED_DATE_TZ >= VR.CREATED_DATE_TZ) 
	       							OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= VR.CREATED_DATE_TZ))
	     							)
             			INNER JOIN "VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = VR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = VR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			INNER JOIN "USER" US ON US.USER_ID = VR.USER_ID AND US.ENABLED = 1 AND US.DELETED = 0
             			WHERE VR.STATUS_ID = ST.STATUS_ID AND ST.ADMINISTRABLE = in_administrable AND VR.ENABLED = 1 AND VR.DELETED = 0)
             	UNION
             	 (SELECT VT.ISO || TO_NVARCHAR(CVR.CHANGE_VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID, CVR.CHANGE_VENDOR_REQUEST_ID AS V_ID, VAI.VENDOR_NAME, ST.NAME AS STATUS_NAME, (US.user_name || ' / ' || US.first_name || ' ' || US.last_name) AS REQUESTER, CVR.VENDOR_TYPE_ID, CVR.CREATED_DATE_TZ AS ORDER_DATE
             			FROM "CHANGE_VENDOR_REQUEST" CVR
             			LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI
	             			ON (CVR.VENDOR_ID = VAI.VENDOR_ID
	     							AND((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= CVR.CREATED_DATE_TZ 
	       									and VAI.MODIFIED_DATE_TZ >= CVR.CREATED_DATE_TZ) 
	       							OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= CVR.CREATED_DATE_TZ))
	     							)
             			INNER JOIN "CHANGE_VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = CVR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = CVR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			INNER JOIN "USER" US ON US.USER_ID = CVR.USER_ID AND US.ENABLED = 1 AND US.DELETED = 0
             			WHERE CVR.STATUS_ID = ST.STATUS_ID AND ST.ADMINISTRABLE = in_administrable AND CVR.ENABLED = 1 AND CVR.DELETED = 0)
             	UNION
             	 (SELECT VT.ISO || TO_NVARCHAR(EVR.EXTEND_VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID, EVR.EXTEND_VENDOR_REQUEST_ID AS V_ID, VAI.VENDOR_NAME, ST.NAME AS STATUS_NAME, (US.user_name || ' / ' || US.first_name || ' ' || US.last_name) AS REQUESTER, EVR.VENDOR_TYPE_ID, EVR.CREATED_DATE_TZ AS ORDER_DATE
             			FROM "EXTEND_VENDOR_REQUEST" EVR 
             			LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI
             					ON (EVR.VENDOR_ID = VAI.VENDOR_ID
	     							AND((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= EVR.CREATED_DATE_TZ 
	       									and VAI.MODIFIED_DATE_TZ >= EVR.CREATED_DATE_TZ) 
	       							OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= EVR.CREATED_DATE_TZ))
	     							)
             			INNER JOIN "EXTEND_VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = EVR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = EVR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			INNER JOIN "USER" US ON US.USER_ID = EVR.USER_ID AND US.ENABLED = 1 AND US.DELETED = 0
             			WHERE EVR.STATUS_ID = ST.STATUS_ID AND ST.ADMINISTRABLE = in_administrable AND EVR.ENABLED = 1 AND EVR.DELETED = 0)
             			ORDER BY order_date DESC;
END;
