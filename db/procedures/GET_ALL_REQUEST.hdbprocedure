PROCEDURE "CART_REQUEST_TOOL"."xscartrequesttool.db.procedures::GET_ALL_REQUEST" (
	IN in_user_id bigint,
	OUT out_result TABLE(REQUEST_ID integer, 
						 iso nvarchar(2), 
						 STATUS_ID integer,
						 STATUS_NAME nvarchar(255),
						 VENDOR_NAME nvarchar(255),
						 CURRENCY_ABBREVIATION nvarchar(255), 
						 REQUEST_SERVICE_CART_AMOUNT DECIMAL,
						 TEAM_NAME nvarchar(255),
						 GOODS_RECIPIENT_USERNAME nvarchar(255),
						 USER_NAME nvarchar(255),
						 LAST_NAME nvarchar(255),
						 FIRST_NAME nvarchar(255),
						 BUDGET_YEAR bigint,
						 REQUEST_CREATED_DATE nvarchar(50),
  						 message_read integer,
  						 created_user_id bigint,
  						 EDITABLE boolean
	 					)
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "CART_REQUEST_TOOL"
	READS SQL DATA AS
BEGIN
	va_message = SELECT RM.REQUEST_ID, sum(case when RM.MESSAGE_READ = 0 then 1 else 0 end) AS MESSAGE_READ
				 	FROM "REQUEST_MESSAGE" RM
				 		WHERE RM.CREATED_USER_ID != in_user_id AND RM.DELETED = 0 AND RM.ENABLED = 1
				 		GROUP BY RM.REQUEST_ID;
				 		
	va_user_role = SELECT USR.ROLE_ID, USR.USER_ID, HL3.HL3_ID, USR.ENABLED, USR.DELETED
						FROM "USER_ROLE" USR
							LEFT JOIN "HL3_USER" HL3 ON HL3.USER_ID = USR.USER_ID
						WHERE USR.USER_ID = in_user_id;
				 		
	out_result = SELECT DISTINCT RQ.REQUEST_ID,
						 CTY.ISO AS iso, 
						 ST.STATUS_ID AS STATUS_ID, 
						 ST.NAME AS STATUS_NAME, 
						 VAI.VENDOR_NAME AS VENDOR_NAME, 
						 CUR.ABBREVIATION AS CURRENCY_ABBREVIATION,
						 RS.CART_AMOUNT AS REQUEST_SERVICE_CART_AMOUNT,
						 HL3.HL3_DESCRIPTION AS TEAM_NAME,
						 RQ.GOODS_RECIPIENT_USERNAME,
						 US.USER_NAME AS USER_NAME,
						 US.LAST_NAME AS LAST_NAME,
						 US.FIRST_NAME AS FIRST_NAME,
						 BUD.BUDGET_YEAR AS BUDGET_YEAR,
						 To_Char(RQ.CREATED_DATE_TZ,'YYYY-MM-DD') AS REQUEST_CREATED_DATE,
               			 VAM.MESSAGE_READ,
               			 RQ.CREATED_USER_ID,
               			 (CASE WHEN (ST.STATUS_ID = 5 OR ST.STATUS_ID = 6) AND USR.ROLE_ID != 1 THEN FALSE ELSE TRUE END) AS EDITABLE
				  FROM "REQUEST" RQ
					  INNER JOIN "REQUEST_STATUS" ST ON RQ.STATUS_ID = ST.STATUS_ID
					  LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI
		                 ON (RQ.VENDOR_ID = VAI.VENDOR_ID
		                     AND(
		                     	((RQ.MODIFIED_DATE_TZ is not null and ((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= RQ.MODIFIED_DATE_TZ
		                          and VAI.MODIFIED_DATE_TZ >= RQ.MODIFIED_DATE_TZ)
		                         OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= RQ.MODIFIED_DATE_TZ))))
		                     	OR                     	
		                     	(RQ.MODIFIED_DATE_TZ is null and ((VAI.MODIFIED_DATE_TZ is not null and VAI.CREATED_DATE_TZ <= RQ.CREATED_DATE_TZ
		                          and VAI.MODIFIED_DATE_TZ >= RQ.CREATED_DATE_TZ)
		                         OR (VAI.MODIFIED_DATE_TZ is null and VAI.CREATED_DATE_TZ <= RQ.CREATED_DATE_TZ))))
		                 )
					  INNER JOIN "REQUEST_SERVICE" RS ON RQ.REQUEST_ID = RS.REQUEST_ID
					  INNER JOIN "CURRENCY" CUR ON RS.CURRENCY_ID = CUR.CURRENCY_ID
					  INNER JOIN "CRT_TYPE" CTY ON RQ.CRT_TYPE_ID = CTY.CRT_TYPE_ID AND CTY.ENABLED = 1 AND CTY.DELETED = 0
					  LEFT JOIN "HL3" HL3 ON RQ.HL3_ID = HL3.HL3_ID
					  LEFT JOIN "USER" US ON RQ.CREATED_USER_ID = US.USER_ID
					  LEFT JOIN "BUDGET_YEAR" BUD ON RQ.BUDGET_YEAR_ID = BUD.BUDGET_YEAR_ID
					  LEFT JOIN :va_message VAM ON RQ.REQUEST_ID = VAM.REQUEST_ID
					  INNER JOIN :va_user_role USR ON USR.ENABLED = 1 
				  WHERE (USR.ROLE_ID != 2 AND RQ.ENABLED = 1 AND RQ.DELETED = 0)
		              		OR (USR.ROLE_ID = 2 
		              			AND ((USR.HL3_ID = RQ.HL3_ID AND RQ.CREATED_USER_ID = in_user_id) OR (USR.HL3_ID is null AND RQ.CREATED_USER_ID = in_user_id)) 
		              			AND RQ.ENABLED = 1 AND RQ.DELETED = 0)
		              		ORDER BY RQ.request_id DESC;
END;