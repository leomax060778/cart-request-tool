PROCEDURE "CART_REQUEST_TOOL"."xscartrequesttool.db.procedures::GET_ALL_REQUEST" (
OUT out_result TABLE( 
 REQUEST_ID BIGINT, 
 STATUS_NAME nvarchar(255), 
 VENDOR_NAME nvarchar(255),
 CURRENCY_ABBREVIATION nvarchar(255), 
 REQUEST_SERVICE_CART_AMOUNT DECIMAL,
 TEAM_NAME nvarchar(255),
 GOODS_RECIPIENT_USERNAME nvarchar(255),
 USER_NAME nvarchar(255),
 LAST_NAME nvarchar(255),
 FIRST_NAME nvarchar(255),
 BUDGET_YEAR bigint,
 REQUEST_CREATED_DATE nvarchar(50)
 ))
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "CART_REQUEST_TOOL"
	READS SQL DATA AS
BEGIN
	out_result = SELECT 
		"REQUEST".REQUEST_ID, 
		 STATUS.NAME AS STATUS_NAME, 
		 "VENDOR_ADDITIONAL_INFORMATION".VENDOR_NAME AS VENDOR_NAME, 
		 "CURRENCY".ABBREVIATION AS CURRENCY_ABBREVIATION,
		 "REQUEST_SERVICE".CART_AMOUNT AS REQUEST_SERVICE_CART_AMOUNT,
		 "HL3".HL3_DESCRIPTION AS TEAM_NAME,
		 "REQUEST".GOODS_RECIPIENT_USERNAME,
		 "USER".USER_NAME AS USER_NAME,
		 "USER".LAST_NAME AS LAST_NAME,
		 "USER".FIRST_NAME AS FIRST_NAME,
		 "BUDGET_YEAR".BUDGET_YEAR AS BUDGET_YEAR,
		 To_Char("REQUEST".CREATED_DATE_TZ,'YYYY-MM-DD') AS REQUEST_CREATED_DATE
	  FROM "REQUEST" REQUEST
	  INNER JOIN "REQUEST_STATUS" AS STATUS ON "REQUEST".STATUS_ID = STATUS.STATUS_ID
	  LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" as VENDOR_ADDITIONAL_INFORMATION ON
	  ("REQUEST".VENDOR_ID = "VENDOR_ADDITIONAL_INFORMATION".VENDOR_ID
  		AND(("VENDOR_ADDITIONAL_INFORMATION".MODIFIED_DATE_TZ is not null 
  				and "VENDOR_ADDITIONAL_INFORMATION".CREATED_DATE_TZ <= "REQUEST".CREATED_DATE_TZ
	  			and "VENDOR_ADDITIONAL_INFORMATION".MODIFIED_DATE_TZ >= "REQUEST".CREATED_DATE_TZ) 
  		 	OR ("VENDOR_ADDITIONAL_INFORMATION".MODIFIED_DATE_TZ is null 
  		 		and "VENDOR_ADDITIONAL_INFORMATION".CREATED_DATE_TZ <= "REQUEST".CREATED_DATE_TZ))
  		)
	  INNER JOIN "REQUEST_SERVICE" AS REQUEST_SERVICE ON "REQUEST".REQUEST_ID = REQUEST_SERVICE.REQUEST_ID
	  INNER JOIN "CURRENCY" AS CURRENCY ON "REQUEST_SERVICE".CURRENCY_ID = CURRENCY.CURRENCY_ID
	  LEFT JOIN "HL3" AS HL3 ON "REQUEST".HL3_ID = HL3.HL3_ID
	  LEFT JOIN "USER" AS USER ON "REQUEST".CREATED_USER_ID = USER.USER_ID
	  LEFT JOIN "BUDGET_YEAR" AS BUDGET_YEAR ON "REQUEST".BUDGET_YEAR_ID = BUDGET_YEAR.BUDGET_YEAR_ID
	  WHERE
	  ("REQUEST".ENABLED = 1)
	  AND ("REQUEST".DELETED = 0);
END;